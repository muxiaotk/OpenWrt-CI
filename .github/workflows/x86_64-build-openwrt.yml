#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2020 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: Build OpenWrt Of x86_64

on:
  push:
    branches: 
      - master
  # schedule:
  #   - cron: 0 20 * * *
  release:
    types: [published]

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
          git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
          libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
          mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools \
          libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \
          vim wget xmlto xxd zlib1g-dev python3-setuptools
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir
          # ln -s -f /mnt/openwrt/build_dir/host ./build_dir/host
          # ln -s -f /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir

          df -h

      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config

          #
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          # 例如:

          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          CONFIG_ARIA2_BITTORRENT=y
          CONFIG_ARIA2_NOXML=y
          CONFIG_ARIA2_OPENSSL=y
          CONFIG_ARIA2_WEBSOCKET=y
          CONFIG_DOCKER_CGROUP_OPTIONS=y
          CONFIG_DOCKER_NET_MACVLAN=y
          CONFIG_DOCKER_STO_EXT4=y
          CONFIG_GNUTLS_ALPN=y
          CONFIG_GNUTLS_ANON=y
          CONFIG_GNUTLS_DTLS_SRTP=y
          CONFIG_GNUTLS_HEARTBEAT=y
          CONFIG_GNUTLS_OCSP=y
          CONFIG_GNUTLS_PSK=y
          CONFIG_KERNEL_CGROUP_DEVICE=y
          CONFIG_KERNEL_CGROUP_FREEZER=y
          CONFIG_KERNEL_CGROUP_NET_PRIO=y
          CONFIG_KERNEL_EXT4_FS_POSIX_ACL=y
          CONFIG_KERNEL_EXT4_FS_SECURITY=y
          CONFIG_KERNEL_FS_POSIX_ACL=y
          CONFIG_KERNEL_NET_CLS_CGROUP=y
          CONFIG_PACKAGE_6in4=y
          CONFIG_PACKAGE_TAR_BZIP2=y
          CONFIG_PACKAGE_TAR_GZIP=y
          CONFIG_PACKAGE_TAR_XZ=y
          CONFIG_PACKAGE_TAR_ZSTD=y
          CONFIG_PACKAGE_adguardhome=y
          CONFIG_PACKAGE_aliyundrive-webdav=m
          CONFIG_PACKAGE_alsa-lib=m
          CONFIG_PACKAGE_alsa-ucm-conf=m
          CONFIG_PACKAGE_alsa-utils=m
          CONFIG_PACKAGE_aria2=m
          CONFIG_PACKAGE_ariang=m
          CONFIG_PACKAGE_attr=m
          CONFIG_PACKAGE_avahi-dbus-daemon=m
          CONFIG_PACKAGE_blkid=y
          CONFIG_PACKAGE_boost=y
          CONFIG_PACKAGE_boost-program_options=y
          CONFIG_PACKAGE_boost-system=y
          CONFIG_PACKAGE_btrfs-progs=y
          CONFIG_PACKAGE_bzip2=y
          CONFIG_PACKAGE_cgroupfs-mount=y
          CONFIG_PACKAGE_chinadns-ng=y
          CONFIG_PACKAGE_containerd=y
          CONFIG_PACKAGE_coreutils-nohup=y
          CONFIG_PACKAGE_coreutils-stat=y
          CONFIG_PACKAGE_dbus=m
          CONFIG_PACKAGE_docker=y
          CONFIG_PACKAGE_dockerd=y
          CONFIG_PACKAGE_fdisk=y
          CONFIG_PACKAGE_frpc=y
          CONFIG_PACKAGE_haproxy=y
          CONFIG_PACKAGE_ip6tables=y
          CONFIG_PACKAGE_iptables-mod-ipopt=y
          CONFIG_PACKAGE_iputils-arping=y
          CONFIG_PACKAGE_ipv6helper=y
          CONFIG_PACKAGE_jq=y
          CONFIG_PACKAGE_kmod-ac97=m
          CONFIG_PACKAGE_kmod-asn1-encoder=y
          CONFIG_PACKAGE_kmod-br-netfilter=y
          CONFIG_PACKAGE_kmod-crypto-rng=y
          CONFIG_PACKAGE_kmod-crypto-sha256=y
          CONFIG_PACKAGE_kmod-dax=y
          CONFIG_PACKAGE_kmod-dm=y
          CONFIG_PACKAGE_kmod-dummy=y
          CONFIG_PACKAGE_kmod-fs-btrfs=y
          CONFIG_PACKAGE_kmod-ifb=y
          CONFIG_PACKAGE_kmod-ikconfig=y
          CONFIG_PACKAGE_kmod-ipt-ipopt=y
          CONFIG_PACKAGE_kmod-ipt-nat6=y
          CONFIG_PACKAGE_kmod-iptunnel=y
          CONFIG_PACKAGE_kmod-keys-encrypted=y
          CONFIG_PACKAGE_kmod-keys-trusted=y
          CONFIG_PACKAGE_kmod-ledtrig-audio=m
          CONFIG_PACKAGE_kmod-lib-raid6=y
          CONFIG_PACKAGE_kmod-lib-xor=y
          CONFIG_PACKAGE_kmod-lib-zstd=y
          CONFIG_PACKAGE_kmod-nf-ipvs=y
          CONFIG_PACKAGE_kmod-nf-nat6=y
          CONFIG_PACKAGE_kmod-oid-registry=y
          CONFIG_PACKAGE_kmod-random-core=y
          CONFIG_PACKAGE_kmod-regmap-core=m
          CONFIG_PACKAGE_kmod-sched-connmark=y
          CONFIG_PACKAGE_kmod-sched-core=y
          CONFIG_PACKAGE_kmod-sit=y
          CONFIG_PACKAGE_kmod-sound-core=m
          CONFIG_PACKAGE_kmod-sound-hda-codec-hdmi=m
          CONFIG_PACKAGE_kmod-sound-hda-codec-realtek=m
          CONFIG_PACKAGE_kmod-sound-hda-codec-via=m
          CONFIG_PACKAGE_kmod-sound-hda-core=m
          CONFIG_PACKAGE_kmod-sound-hda-intel=m
          CONFIG_PACKAGE_kmod-sound-i8x0=m
          CONFIG_PACKAGE_kmod-sound-mpu401=m
          CONFIG_PACKAGE_kmod-sound-via82xx=m
          CONFIG_PACKAGE_kmod-tpm=y
          CONFIG_PACKAGE_kmod-usb-audio=m
          CONFIG_PACKAGE_kmod-veth=y
          CONFIG_PACKAGE_libatomic=y
          CONFIG_PACKAGE_libattr=y
          CONFIG_PACKAGE_libavahi-client=m
          CONFIG_PACKAGE_libavahi-dbus-support=m
          CONFIG_PACKAGE_libbz2=y
          CONFIG_PACKAGE_libconfig=m
          CONFIG_PACKAGE_libdaemon=m
          CONFIG_PACKAGE_libdbus=m
          CONFIG_PACKAGE_libdevmapper=y
          CONFIG_PACKAGE_libexif=y
          CONFIG_PACKAGE_libexpat=m
          CONFIG_PACKAGE_libffmpeg-audio-dec=y
          CONFIG_PACKAGE_libflac=y
          CONFIG_PACKAGE_libgnutls=m
          CONFIG_PACKAGE_libid3tag=y
          CONFIG_PACKAGE_libjpeg-turbo=y
          CONFIG_PACKAGE_libltdl=y
          CONFIG_PACKAGE_liblua5.3=y
          CONFIG_PACKAGE_liblzma=y
          CONFIG_PACKAGE_liblzo=y
          CONFIG_PACKAGE_libnettle=m
          CONFIG_PACKAGE_libnetwork=y
          CONFIG_PACKAGE_libogg=y
          CONFIG_PACKAGE_libpopt=m
          CONFIG_PACKAGE_libseccomp=y
          CONFIG_PACKAGE_libsoxr=m
          CONFIG_PACKAGE_libsqlite3=y
          CONFIG_PACKAGE_libtasn1=m
          CONFIG_PACKAGE_libtirpc=m
          CONFIG_PACKAGE_liburing=m
          CONFIG_PACKAGE_libvorbis=y
          CONFIG_PACKAGE_libzstd=y
          CONFIG_PACKAGE_lsblk=y
          CONFIG_PACKAGE_luci-app-adguardhome=y
          CONFIG_PACKAGE_luci-app-airplay2=m
          CONFIG_PACKAGE_luci-app-aliyundrive-webdav=m
          CONFIG_PACKAGE_luci-app-aria2=m
          CONFIG_PACKAGE_luci-app-diskman=y
          CONFIG_PACKAGE_luci-app-docker=y
          CONFIG_PACKAGE_luci-app-dockerman=y
          CONFIG_PACKAGE_luci-app-frpc=y
          CONFIG_PACKAGE_luci-app-minidlna=y
          CONFIG_PACKAGE_luci-app-passwall=y
          CONFIG_PACKAGE_luci-app-ps3netsrv=m
          CONFIG_PACKAGE_luci-app-pushbot=y
          CONFIG_PACKAGE_luci-app-qos=y
          CONFIG_PACKAGE_luci-app-samba4=m
          CONFIG_PACKAGE_luci-app-serverchan=m
          CONFIG_PACKAGE_luci-app-store=y
          CONFIG_PACKAGE_luci-app-udpxy=y
          CONFIG_PACKAGE_luci-compat=y
          CONFIG_PACKAGE_luci-i18n-adguardhome-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-airplay2-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-aliyundrive-webdav-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-aria2-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-diskman-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-docker-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-dockerman-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-frpc-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-minidlna-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-passwall-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-ps3netsrv-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-qos-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-samba4-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-udpxy-zh-cn=y
          CONFIG_PACKAGE_luci-lib-docker=y
          CONFIG_PACKAGE_luci-proto-ipv6=y
          CONFIG_PACKAGE_luci-theme-material=y
          CONFIG_PACKAGE_luci-theme-neobird=y
          CONFIG_PACKAGE_luci-theme-netgear=y
          CONFIG_PACKAGE_minidlna=y
          CONFIG_PACKAGE_mount-utils=y
          CONFIG_PACKAGE_odhcp6c=y
          CONFIG_PACKAGE_odhcp6c_ext_cer_id=0
          CONFIG_PACKAGE_odhcpd-ipv6only=y
          CONFIG_PACKAGE_odhcpd_ipv6only_ext_cer_id=0
          CONFIG_PACKAGE_parted=y
          CONFIG_PACKAGE_ps3netsrv=m
          CONFIG_PACKAGE_qos-scripts=y
          CONFIG_PACKAGE_runc=y
          CONFIG_PACKAGE_samba4-libs=m
          CONFIG_PACKAGE_samba4-server=m
          CONFIG_PACKAGE_shadowsocks-libev-ss-local=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-redir=y
          CONFIG_PACKAGE_shairport-sync-openssl=m
          CONFIG_PACKAGE_smartmontools=y
          CONFIG_PACKAGE_tar=y
          CONFIG_PACKAGE_tc-mod-iptables=y
          CONFIG_PACKAGE_tc-tiny=y
          CONFIG_PACKAGE_tini=y
          CONFIG_PACKAGE_trojan-plus=y
          CONFIG_PACKAGE_udpxy=y
          CONFIG_PACKAGE_unzip=y
          CONFIG_PACKAGE_v2ray-core=y
          CONFIG_PACKAGE_v2ray-plugin=y
          CONFIG_PACKAGE_xz=y
          CONFIG_PACKAGE_xz-utils=y
          CONFIG_SAMBA4_SERVER_AVAHI=y
          CONFIG_SAMBA4_SERVER_NETBIOS=y
          CONFIG_SAMBA4_SERVER_VFS=y
          CONFIG_SAMBA4_SERVER_WSDD2=y
          CONFIG_SQLITE3_DYNAMIC_EXTENSIONS=y
          CONFIG_SQLITE3_FTS3=y
          CONFIG_SQLITE3_FTS4=y
          CONFIG_SQLITE3_FTS5=y
          CONFIG_SQLITE3_JSON1=y
          CONFIG_SQLITE3_RTREE=y
          CONFIG_TARGET_IMAGES_GZIP=y
          CONFIG_TARGET_KERNEL_PARTSIZE=256
          CONFIG_TARGET_ROOTFS_PARTSIZE=512
          # CONFIG_VMDK_IMAGES is not set
          CONFIG_ZSTD_OPTIMIZE_O3=y
          CONFIG_boost-compile-visibility-hidden=y
          CONFIG_boost-runtime-shared=y
          CONFIG_boost-static-and-shared-libs=y
          CONFIG_boost-variant-release=y
          EOF

          #
          # ===============================================================
          # 

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          df -h

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
